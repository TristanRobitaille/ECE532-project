#-----------------------------------------------------------
# Vivado v2018.3 (64-bit)
# SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
# Start of session at: Tue Jan 30 13:11:15 2024
# Process ID: 55724
# Current directory: C:/ECE532/Trumpet_project
# Command line: vivado.exe -source rebuild.tcl
# Log file: C:/ECE532/Trumpet_project/vivado.log
# Journal file: C:/ECE532/Trumpet_project\vivado.jou
#-----------------------------------------------------------
start_gui
source rebuild.tcl
# set origin_dir "."
# if { [info exists ::origin_dir_loc] } {
#   set origin_dir $::origin_dir_loc
# }
# set _xil_proj_name_ "project_1"
# if { [info exists ::user_project_name] } {
#   set _xil_proj_name_ $::user_project_name
# }
# variable script_file
# set script_file "rebuild.tcl"
# proc print_help {} {
#   variable script_file
#   puts "\nDescription:"
#   puts "Recreate a Vivado project from this script. The created project will be"
#   puts "functionally equivalent to the original project for which this script was"
#   puts "generated. The script contains commands for creating a project, filesets,"
#   puts "runs, adding/importing sources and setting properties on various objects.\n"
#   puts "Syntax:"
#   puts "$script_file"
#   puts "$script_file -tclargs \[--origin_dir <path>\]"
#   puts "$script_file -tclargs \[--project_name <name>\]"
#   puts "$script_file -tclargs \[--help\]\n"
#   puts "Usage:"
#   puts "Name                   Description"
#   puts "-------------------------------------------------------------------------"
#   puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
#   puts "                       origin_dir path value is \".\", otherwise, the value"
#   puts "                       that was set with the \"-paths_relative_to\" switch"
#   puts "                       when this script was generated.\n"
#   puts "\[--project_name <name>\] Create project with the specified name. Default"
#   puts "                       name is the name of the project from where this"
#   puts "                       script was generated.\n"
#   puts "\[--help\]               Print help information for this script"
#   puts "-------------------------------------------------------------------------\n"
#   exit 0
# }
# if { $::argc > 0 } {
#   for {set i 0} {$i < $::argc} {incr i} {
#     set option [string trim [lindex $::argv $i]]
#     switch -regexp -- $option {
#       "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
#       "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
#       "--help"         { print_help }
#       default {
#         if { [regexp {^-} $option] } {
#           puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
#           return 1
#         }
#       }
#     }
#   }
# }
# set orig_proj_dir "[file normalize "$origin_dir/project_1"]"
# create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a100tcsg324-1
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2018.3/data/ip'.
create_project: Time (s): cpu = 00:00:05 ; elapsed = 00:00:08 . Memory (MB): peak = 850.574 ; gain = 198.727
# set proj_dir [get_property directory [current_project]]
# set obj [current_project]
# set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
# set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
# set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
# set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
# set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
# set_property -name "dsa.emu_dir" -value "emu" -objects $obj
# set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
# set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
# set_property -name "dsa.flash_size" -value "1024" -objects $obj
# set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
# set_property -name "dsa.host_interface" -value "pcie" -objects $obj
# set_property -name "dsa.num_compute_units" -value "60" -objects $obj
# set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
# set_property -name "dsa.vendor" -value "xilinx" -objects $obj
# set_property -name "dsa.version" -value "0.0" -objects $obj
# set_property -name "enable_vhdl_2008" -value "1" -objects $obj
# set_property -name "ip_cache_permissions" -value "read write" -objects $obj
# set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
# set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
# set_property -name "part" -value "xc7a100tcsg324-1" -objects $obj
# set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
# set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
# set_property -name "simulator_language" -value "Mixed" -objects $obj
# set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj
# if {[string equal [get_filesets -quiet sources_1] ""]} {
#   create_fileset -srcset sources_1
# }
# set obj [get_filesets sources_1]
# set files [list \
#  [file normalize "${origin_dir}/block_designs/design_1/hdl/design_1_wrapper.v"] \
# ]
# add_files -norecurse -fileset $obj $files
# set obj [get_filesets sources_1]
# set_property -name "top" -value "design_1_wrapper" -objects $obj
# set_property -name "top_auto_set" -value "0" -objects $obj
# if {[string equal [get_filesets -quiet constrs_1] ""]} {
#   create_fileset -constrset constrs_1
# }
# set obj [get_filesets constrs_1]
# set file "[file normalize "$origin_dir/constraints/microblaze.xdc"]"
# set file_added [add_files -norecurse -fileset $obj [list $file]]
# set file "$origin_dir/constraints/microblaze.xdc"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
# set_property -name "file_type" -value "XDC" -objects $file_obj
# set obj [get_filesets constrs_1]
# set_property -name "target_part" -value "xc7a100tcsg324-1" -objects $obj
# if {[string equal [get_filesets -quiet sim_1] ""]} {
#   create_fileset -simset sim_1
# }
# set obj [get_filesets sim_1]
# set obj [get_filesets sim_1]
# set_property -name "top" -value "design_1_wrapper" -objects $obj
# set_property -name "top_auto_set" -value "0" -objects $obj
# set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
# set obj [get_filesets utils_1]
# set obj [get_filesets utils_1]
# proc cr_bd_design_1 { parentCell } {
# 
#   # CHANGE DESIGN NAME HERE
#   set design_name design_1
# 
#   common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."
# 
#   create_bd_design $design_name
# 
#   set bCheckIPsPassed 1
#   ##################################################################
#   # CHECK IPs
#   ##################################################################
#   set bCheckIPs 1
#   if { $bCheckIPs == 1 } {
#      set list_check_ips "\ 
#   xilinx.com:ip:clk_wiz:6.0\
#   xilinx.com:ip:mdm:3.2\
#   xilinx.com:ip:microblaze:11.0\
#   xilinx.com:ip:axi_intc:4.1\
#   xilinx.com:ip:xlconcat:2.1\
#   xilinx.com:ip:proc_sys_reset:5.0\
#   xilinx.com:ip:lmb_bram_if_cntlr:4.0\
#   xilinx.com:ip:lmb_v10:3.0\
#   xilinx.com:ip:blk_mem_gen:8.4\
#   "
# 
#    set list_ips_missing ""
#    common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."
# 
#    foreach ip_vlnv $list_check_ips {
#       set ip_obj [get_ipdefs -all $ip_vlnv]
#       if { $ip_obj eq "" } {
#          lappend list_ips_missing $ip_vlnv
#       }
#    }
# 
#    if { $list_ips_missing ne "" } {
#       catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
#       set bCheckIPsPassed 0
#    }
# 
#   }
# 
#   if { $bCheckIPsPassed != 1 } {
#     common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
#     return 3
#   }
# 
#   
# # Hierarchical cell: microblaze_0_local_memory
# proc create_hier_cell_microblaze_0_local_memory { parentCell nameHier } {
# 
#   variable script_folder
# 
#   if { $parentCell eq "" || $nameHier eq "" } {
#      catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_microblaze_0_local_memory() - Empty argument(s)!"}
#      return
#   }
# 
#   # Get object for parentCell
#   set parentObj [get_bd_cells $parentCell]
#   if { $parentObj == "" } {
#      catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
#      return
#   }
# 
#   # Make sure parentObj is hier blk
#   set parentType [get_property TYPE $parentObj]
#   if { $parentType ne "hier" } {
#      catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
#      return
#   }
# 
#   # Save current instance; Restore later
#   set oldCurInst [current_bd_instance .]
# 
#   # Set parent object as current
#   current_bd_instance $parentObj
# 
#   # Create cell and set as current instance
#   set hier_obj [create_bd_cell -type hier $nameHier]
#   current_bd_instance $hier_obj
# 
#   # Create interface pins
#   create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 DLMB
#   create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 ILMB
# 
#   # Create pins
#   create_bd_pin -dir I -type clk LMB_Clk
#   create_bd_pin -dir I -type rst SYS_Rst
# 
#   # Create instance: dlmb_bram_if_cntlr, and set properties
#   set dlmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 dlmb_bram_if_cntlr ]
#   set_property -dict [ list \
#    CONFIG.C_ECC {0} \
#  ] $dlmb_bram_if_cntlr
# 
#   # Create instance: dlmb_v10, and set properties
#   set dlmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 dlmb_v10 ]
# 
#   # Create instance: ilmb_bram_if_cntlr, and set properties
#   set ilmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 ilmb_bram_if_cntlr ]
#   set_property -dict [ list \
#    CONFIG.C_ECC {0} \
#  ] $ilmb_bram_if_cntlr
# 
#   # Create instance: ilmb_v10, and set properties
#   set ilmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 ilmb_v10 ]
# 
#   # Create instance: lmb_bram, and set properties
#   set lmb_bram [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 lmb_bram ]
#   set_property -dict [ list \
#    CONFIG.Memory_Type {True_Dual_Port_RAM} \
#    CONFIG.use_bram_block {BRAM_Controller} \
#  ] $lmb_bram
# 
#   # Create interface connections
#   connect_bd_intf_net -intf_net microblaze_0_dlmb [get_bd_intf_pins DLMB] [get_bd_intf_pins dlmb_v10/LMB_M]
#   connect_bd_intf_net -intf_net microblaze_0_dlmb_bus [get_bd_intf_pins dlmb_bram_if_cntlr/SLMB] [get_bd_intf_pins dlmb_v10/LMB_Sl_0]
#   connect_bd_intf_net -intf_net microblaze_0_dlmb_cntlr [get_bd_intf_pins dlmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTA]
#   connect_bd_intf_net -intf_net microblaze_0_ilmb [get_bd_intf_pins ILMB] [get_bd_intf_pins ilmb_v10/LMB_M]
#   connect_bd_intf_net -intf_net microblaze_0_ilmb_bus [get_bd_intf_pins ilmb_bram_if_cntlr/SLMB] [get_bd_intf_pins ilmb_v10/LMB_Sl_0]
#   connect_bd_intf_net -intf_net microblaze_0_ilmb_cntlr [get_bd_intf_pins ilmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTB]
# 
#   # Create port connections
#   connect_bd_net -net SYS_Rst_1 [get_bd_pins SYS_Rst] [get_bd_pins dlmb_bram_if_cntlr/LMB_Rst] [get_bd_pins dlmb_v10/SYS_Rst] [get_bd_pins ilmb_bram_if_cntlr/LMB_Rst] [get_bd_pins ilmb_v10/SYS_Rst]
#   connect_bd_net -net microblaze_0_Clk [get_bd_pins LMB_Clk] [get_bd_pins dlmb_bram_if_cntlr/LMB_Clk] [get_bd_pins dlmb_v10/LMB_Clk] [get_bd_pins ilmb_bram_if_cntlr/LMB_Clk] [get_bd_pins ilmb_v10/LMB_Clk]
# 
#   # Restore current instance
#   current_bd_instance $oldCurInst
# }
#   variable script_folder
# 
#   if { $parentCell eq "" } {
#      set parentCell [get_bd_cells /]
#   }
# 
#   # Get object for parentCell
#   set parentObj [get_bd_cells $parentCell]
#   if { $parentObj == "" } {
#      catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
#      return
#   }
# 
#   # Make sure parentObj is hier blk
#   set parentType [get_property TYPE $parentObj]
#   if { $parentType ne "hier" } {
#      catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
#      return
#   }
# 
#   # Save current instance; Restore later
#   set oldCurInst [current_bd_instance .]
# 
#   # Set parent object as current
#   current_bd_instance $parentObj
# 
# 
#   # Create interface ports
# 
#   # Create ports
#   set clk_100MHz [ create_bd_port -dir I -type clk clk_100MHz ]
#   set_property -dict [ list \
#    CONFIG.FREQ_HZ {100000000} \
#  ] $clk_100MHz
#   set reset_rtl_0 [ create_bd_port -dir I -type rst reset_rtl_0 ]
#   set_property -dict [ list \
#    CONFIG.POLARITY {ACTIVE_LOW} \
#  ] $reset_rtl_0
# 
#   # Create instance: clk_wiz_1, and set properties
#   set clk_wiz_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_1 ]
#   set_property -dict [ list \
#    CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} \
#    CONFIG.RESET_PORT {resetn} \
#    CONFIG.RESET_TYPE {ACTIVE_LOW} \
#  ] $clk_wiz_1
# 
#   # Create instance: mdm_1, and set properties
#   set mdm_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mdm:3.2 mdm_1 ]
# 
#   # Create instance: microblaze_0, and set properties
#   set microblaze_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0 ]
#   set_property -dict [ list \
#    CONFIG.C_DEBUG_ENABLED {1} \
#    CONFIG.C_D_AXI {1} \
#    CONFIG.C_D_LMB {1} \
#    CONFIG.C_I_LMB {1} \
#  ] $microblaze_0
# 
#   # Create instance: microblaze_0_axi_intc, and set properties
#   set microblaze_0_axi_intc [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_intc:4.1 microblaze_0_axi_intc ]
#   set_property -dict [ list \
#    CONFIG.C_HAS_FAST {1} \
#  ] $microblaze_0_axi_intc
# 
#   # Create instance: microblaze_0_axi_periph, and set properties
#   set microblaze_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 microblaze_0_axi_periph ]
#   set_property -dict [ list \
#    CONFIG.NUM_MI {1} \
#  ] $microblaze_0_axi_periph
# 
#   # Create instance: microblaze_0_local_memory
#   create_hier_cell_microblaze_0_local_memory [current_bd_instance .] microblaze_0_local_memory
# 
#   # Create instance: microblaze_0_xlconcat, and set properties
#   set microblaze_0_xlconcat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 microblaze_0_xlconcat ]
# 
#   # Create instance: rst_clk_wiz_1_100M, and set properties
#   set rst_clk_wiz_1_100M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_clk_wiz_1_100M ]
# 
#   # Create interface connections
#   connect_bd_intf_net -intf_net microblaze_0_axi_dp [get_bd_intf_pins microblaze_0/M_AXI_DP] [get_bd_intf_pins microblaze_0_axi_periph/S00_AXI]
#   connect_bd_intf_net -intf_net microblaze_0_debug [get_bd_intf_pins mdm_1/MBDEBUG_0] [get_bd_intf_pins microblaze_0/DEBUG]
#   connect_bd_intf_net -intf_net microblaze_0_dlmb_1 [get_bd_intf_pins microblaze_0/DLMB] [get_bd_intf_pins microblaze_0_local_memory/DLMB]
#   connect_bd_intf_net -intf_net microblaze_0_ilmb_1 [get_bd_intf_pins microblaze_0/ILMB] [get_bd_intf_pins microblaze_0_local_memory/ILMB]
#   connect_bd_intf_net -intf_net microblaze_0_intc_axi [get_bd_intf_pins microblaze_0_axi_intc/s_axi] [get_bd_intf_pins microblaze_0_axi_periph/M00_AXI]
#   connect_bd_intf_net -intf_net microblaze_0_interrupt [get_bd_intf_pins microblaze_0/INTERRUPT] [get_bd_intf_pins microblaze_0_axi_intc/interrupt]
# 
#   # Create port connections
#   connect_bd_net -net clk_100MHz_1 [get_bd_ports clk_100MHz] [get_bd_pins clk_wiz_1/clk_in1]
#   connect_bd_net -net clk_wiz_1_locked [get_bd_pins clk_wiz_1/locked] [get_bd_pins rst_clk_wiz_1_100M/dcm_locked]
#   connect_bd_net -net mdm_1_debug_sys_rst [get_bd_pins mdm_1/Debug_SYS_Rst] [get_bd_pins rst_clk_wiz_1_100M/mb_debug_sys_rst]
#   connect_bd_net -net microblaze_0_Clk [get_bd_pins clk_wiz_1/clk_out1] [get_bd_pins microblaze_0/Clk] [get_bd_pins microblaze_0_axi_intc/processor_clk] [get_bd_pins microblaze_0_axi_intc/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/ACLK] [get_bd_pins microblaze_0_axi_periph/M00_ACLK] [get_bd_pins microblaze_0_axi_periph/S00_ACLK] [get_bd_pins microblaze_0_local_memory/LMB_Clk] [get_bd_pins rst_clk_wiz_1_100M/slowest_sync_clk]
#   connect_bd_net -net microblaze_0_intr [get_bd_pins microblaze_0_axi_intc/intr] [get_bd_pins microblaze_0_xlconcat/dout]
#   connect_bd_net -net reset_rtl_0_1 [get_bd_ports reset_rtl_0] [get_bd_pins clk_wiz_1/resetn]
#   connect_bd_net -net rst_clk_wiz_1_100M_bus_struct_reset [get_bd_pins microblaze_0_local_memory/SYS_Rst] [get_bd_pins rst_clk_wiz_1_100M/bus_struct_reset]
#   connect_bd_net -net rst_clk_wiz_1_100M_mb_reset [get_bd_pins microblaze_0/Reset] [get_bd_pins microblaze_0_axi_intc/processor_rst] [get_bd_pins rst_clk_wiz_1_100M/mb_reset]
#   connect_bd_net -net rst_clk_wiz_1_100M_peripheral_aresetn [get_bd_pins microblaze_0_axi_intc/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/ARESETN] [get_bd_pins microblaze_0_axi_periph/M00_ARESETN] [get_bd_pins microblaze_0_axi_periph/S00_ARESETN] [get_bd_pins rst_clk_wiz_1_100M/peripheral_aresetn]
# 
#   # Create address segments
#   create_bd_addr_seg -range 0x00008000 -offset 0x00000000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB/Mem] SEG_dlmb_bram_if_cntlr_Mem
#   create_bd_addr_seg -range 0x00008000 -offset 0x00000000 [get_bd_addr_spaces microblaze_0/Instruction] [get_bd_addr_segs microblaze_0_local_memory/ilmb_bram_if_cntlr/SLMB/Mem] SEG_ilmb_bram_if_cntlr_Mem
#   create_bd_addr_seg -range 0x00010000 -offset 0x41200000 [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs microblaze_0_axi_intc/S_AXI/Reg] SEG_microblaze_0_axi_intc_Reg
# 
# 
#   # Restore current instance
#   current_bd_instance $oldCurInst
# 
#   validate_bd_design
#   save_bd_design
#   close_bd_design $design_name 
# }
# cr_bd_design_1 ""
INFO: [BD_TCL-3] Currently there is no design <design_1> in project, so creating one...
Wrote  : <C:\ECE532\Trumpet_project\project_1\project_1.srcs\sources_1\bd\design_1\design_1.bd> 
INFO: [BD_TCL-6] Checking if the following IPs exist in the project's IP catalog:  
  xilinx.com:ip:clk_wiz:6.0 xilinx.com:ip:mdm:3.2 xilinx.com:ip:microblaze:11.0 xilinx.com:ip:axi_intc:4.1 xilinx.com:ip:xlconcat:2.1 xilinx.com:ip:proc_sys_reset:5.0 xilinx.com:ip:lmb_bram_if_cntlr:4.0 xilinx.com:ip:lmb_v10:3.0 xilinx.com:ip:blk_mem_gen:8.4  .
INFO: [Device 21-403] Loading part xc7a100tcsg324-1
INFO: [xilinx.com:ip:axi_intc:4.1-1] /microblaze_0_axi_intc: The AXI INTC core has been configured to operate with synchronous clocks.
WARNING: [xilinx.com:ip:axi_intc:4.1-4] /microblaze_0_axi_intc: Could not determine interrupt input port type - using default interrupt type Rising Edge. Please change this manually if necessary.
WARNING: [xilinx.com:ip:proc_sys_reset:5.0-1] /rst_clk_wiz_1_100M Input reset pins ext_reset_in and aux_reset_in are unconnected. Core will generate resets only on POWER ON.
CRITICAL WARNING: [BD 41-759] The input pins (listed below) are either not connected or do not have a source port, and they don't have a tie-off specified. These pins are tied-off to all 0's to avoid error in Implementation flow.
Please check your design and connect them as needed: 
/rst_clk_wiz_1_100M/ext_reset_in

Wrote  : <C:\ECE532\Trumpet_project\project_1\project_1.srcs\sources_1\bd\design_1\design_1.bd> 
Wrote  : <C:/ECE532/Trumpet_project/project_1/project_1.srcs/sources_1/bd/design_1/ui/bd_1f5defd0.ui> 
# set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
# set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 
# if {[string equal [get_runs -quiet synth_1] ""]} {
#     create_run -name synth_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
# } else {
#   set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
#   set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
# }
# set obj [get_runs synth_1]
# set_property set_report_strategy_name 1 $obj
# set_property report_strategy {Vivado Synthesis Default Reports} $obj
# set_property set_report_strategy_name 0 $obj
# if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
#   create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
# }
# set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "synth_1_synth_report_utilization_0" -objects $obj
# 
# }
# set obj [get_runs synth_1]
# set_property -name "part" -value "xc7a100tcsg324-1" -objects $obj
# set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj
# current_run -synthesis [get_runs synth_1]
# if {[string equal [get_runs -quiet impl_1] ""]} {
#     create_run -name impl_1 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
# } else {
#   set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
#   set_property flow "Vivado Implementation 2018" [get_runs impl_1]
# }
# set obj [get_runs impl_1]
# set_property set_report_strategy_name 1 $obj
# set_property report_strategy {Vivado Implementation Default Reports} $obj
# set_property set_report_strategy_name 0 $obj
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_init_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_opt_report_drc_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_power_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_place_report_io_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_place_report_utilization_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_place_report_control_sets_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
#   create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_place_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_post_place_power_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_phys_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_drc_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_methodology_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_power_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_route_status_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_incremental_reuse_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_clock_utilization_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_bus_skew_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
#   create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_bus_skew_0" -objects $obj
# 
# }
# set obj [get_runs impl_1]
# set_property -name "part" -value "xc7a100tcsg324-1" -objects $obj
# set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
# set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
# set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj
# current_run -implementation [get_runs impl_1]
# puts "INFO: Project created:${_xil_proj_name_}"
INFO: Project created:project_1
# set obj [get_dashboards default_dashboard]
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ] ""]} {
# create_dashboard_gadget -name {drc_1} -type drc
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ] ""]} {
# create_dashboard_gadget -name {methodology_1} -type methodology
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ] ""]} {
# create_dashboard_gadget -name {power_1} -type power
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ] ""]} {
# create_dashboard_gadget -name {timing_1} -type timing
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ] ""]} {
# create_dashboard_gadget -name {utilization_1} -type utilization
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ]
# set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
# set_property -name "run.step" -value "synth_design" -objects $obj
# set_property -name "run.type" -value "synthesis" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ] ""]} {
# create_dashboard_gadget -name {utilization_2} -type utilization
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ]
# set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj
# move_dashboard_gadget -name {utilization_1} -row 0 -col 0
# move_dashboard_gadget -name {power_1} -row 1 -col 0
# move_dashboard_gadget -name {drc_1} -row 2 -col 0
# move_dashboard_gadget -name {timing_1} -row 0 -col 1
# move_dashboard_gadget -name {utilization_2} -row 1 -col 1
# move_dashboard_gadget -name {methodology_1} -row 2 -col 1
# current_dashboard default_dashboard 
update_compile_order -fileset sources_1
INFO: [Vivado 12-4158] Exported Hardware file is out of date. Exported hardware information may be inconsistent with respect to the current state of the design. It is recommended that you re-export the design and launch SDK otherwise SDK is launched with out of date hardware system file.
file mkdir C:/ECE532/Trumpet_project/project_1/project_1.sdk
launch_sdk -workspace C:/ECE532/Trumpet_project/software -hwspec C:/ECE532/Trumpet_project/exported_hardware/design_1_wrapper.hdf
INFO: [Vivado 12-393] Launching SDK...
INFO: [Vivado 12-417] Running xsdk -workspace C:/ECE532/Trumpet_project/software -hwspec C:/ECE532/Trumpet_project/exported_hardware/design_1_wrapper.hdf
INFO: [Vivado 12-3157] SDK launch initiated. Please check console for any further messages.
INFO: [Vivado 12-4158] Exported Hardware file is out of date. Exported hardware information may be inconsistent with respect to the current state of the design. It is recommended that you re-export the design and launch SDK otherwise SDK is launched with out of date hardware system file.
INFO: [Vivado 12-4158] Exported Hardware file is out of date. Exported hardware information may be inconsistent with respect to the current state of the design. It is recommended that you re-export the design and launch SDK otherwise SDK is launched with out of date hardware system file.
launch_sdk -workspace C:/ECE532/Trumpet_project/software -hwspec C:/ECE532/Trumpet_project/exported_hardware/design_1_wrapper.hdf
INFO: [Vivado 12-393] Launching SDK...
INFO: [Vivado 12-417] Running xsdk -workspace C:/ECE532/Trumpet_project/software -hwspec C:/ECE532/Trumpet_project/exported_hardware/design_1_wrapper.hdf
INFO: [Vivado 12-3157] SDK launch initiated. Please check console for any further messages.
INFO: [Vivado 12-4158] Exported Hardware file is out of date. Exported hardware information may be inconsistent with respect to the current state of the design. It is recommended that you re-export the design and launch SDK otherwise SDK is launched with out of date hardware system file.
launch_sdk -workspace C:/ECE532/Trumpet_project/software -hwspec C:/ECE532/Trumpet_project/exported_hardware/design_1_wrapper.hdf
INFO: [Vivado 12-393] Launching SDK...
INFO: [Vivado 12-417] Running xsdk -workspace C:/ECE532/Trumpet_project/software -hwspec C:/ECE532/Trumpet_project/exported_hardware/design_1_wrapper.hdf
INFO: [Vivado 12-3157] SDK launch initiated. Please check console for any further messages.
exit
INFO: [Common 17-206] Exiting Vivado at Tue Jan 30 13:23:40 2024...
