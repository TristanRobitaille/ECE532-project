/*
 * cap_btn.c
 *
 *  Created on: Feb 3, 2024
 *      Author: robita46
 */

#include "cap_btn.h"

//----- TYPEDEF -----//
typedef u8 AddressType;

//----- GLOBALS -----//
volatile unsigned int* i2c = (unsigned int*) XPAR_I2C_CAP_BTN_AXI_IIC_0_BASEADDR;
volatile u8 TransmitComplete;
volatile u8 ReceiveComplete;

u8 rx_buffer;

XIic IicInstance;

//----- FUNCTIONS -----//
int write_i2c_single_byte_blocking(u8 data_to_write) {
	int status;
	u8 data[3] = {0xCA, 0xFE, 0xBE};
	XIic_Send(XPAR_I2C_CAP_BTN_AXI_IIC_0_BASEADDR, AD7156_ADDR, data, 3, XIIC_STOP);
	return status;
}

u8 read_i2c_single_byte_blocking(u8 addr) {
	ReceiveComplete = 1;
	write_i2c_single_byte_blocking(addr);

	XIic_Start(&IicInstance);
//	XIic_MasterRecv(&IicInstance, &rx_buffer, /*ByteCount*/ 1);
	while (1) {
		XIic_MasterRecv(&IicInstance, &rx_buffer, /*ByteCount*/ 1);
		usleep(50000);
	}
	//	while ((ReceiveComplete) || (XIic_IsIicBusy(&IicInstance) == TRUE));
	XIic_Stop(&IicInstance);

	return rx_buffer;
}

void SendHandler(XIic *InstancePtr) {
	TransmitComplete = 0; }
void ReceiveHandler(XIic *InstancePtr){
	ReceiveComplete = 0; }
static void StatusHandler(XIic *InstancePtr, int Event) { ; }
